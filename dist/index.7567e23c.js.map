{"mappings":"ACwBA,eAAe,EAAa,CAAK,EAC7B,IAAM,EAAW,SAAS,cAAc,CAAC,qBACzC,CAAA,EAAS,SAAS,CAAG,GAErB,IAAM,EAAc,EAAM,IAAI,CAAC,CAAC,EAAG,IAAM,EAAE,IAAI,CAAG,EAAE,IAAI,EAElD,EAAW,EAAY,GAAG,CAAC,AAAA,GAC7B,MAAM,CAAC,mDAAmD,EAAE,EAAK,cAAc,CAAC,4CAA4C,CAAC,EAC5H,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,KAI7B,EAAU,MAAM,QAAQ,GAAG,CAAC,GAClC,QAAQ,GAAG,CAAC,GAGZ,EAAQ,OAAO,CAAC,CAAC,EAAiB,KAC9B,IAAM,EAAO,CAAW,CAAC,EAAM,CACzB,EAAW,EAAgB,KAAK,CAAG,EAAgB,KAAK,CAAC,EAAE,CAAC,UAAU,CAAG,CAAC,EAC1E,EAAW,SAAS,aAAa,CAAC,UACxC,CAAA,EAAS,SAAS,CAAG,CAAC;;;sBAGR,EAAE,EAAK,UAAU,CAAC,OAAO,EAAE,EAAK,KAAK,CAAC;;gBAE5C,EAAE,EAAK,IAAI,CAAC,EAAE,EAAE,EAAK,KAAK,CAAC;;6CAEE,EAAE,EAAK,MAAM,CAAC;2CAChB,EAAE,EAAK,cAAc,CAAC;;eAElD,EAAE,EAAK,WAAW,CAAC;qBACb,EAAE,EAAS,WAAW,EAAI,IAAI,mDAAmD,EAAE,EAAK,KAAK,CAAC;;;;QAI3G,CAAC,CACD,EAAS,WAAW,CAAC,EACzB,GACA,EAAW,EACf,CA7DA,SAAS,cAAc,CAAC,eAAe,gBAAgB,CAAC,QAAS,UAC7D,SAAS,aAAa,CAAC,WAAW,KAAK,CAAC,OAAO,CAAG,OAClD,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAC,OAAO,CAAG,OAChD,SAAS,cAAc,CAAC,sBAAsB,SAAS,CAAG,GAC1D,EAAa,EACb,IAAM,EAAe,SAAS,cAAc,CAAC,eAAe,KAAK,CAC3D,EAAgB,SAAS,cAAc,CAAC,gBAAgB,KAAK,CAC7D,EAAM,CAAC,2CAA2C,EAAE,EAAa,CAAC,EAAE,EAAc,8CAA8C,CAAC,CAEvI,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,GACvB,EAAO,MAAM,EAAS,IAAI,GAChC,EAAa,EAAK,OAAO,CAAC,KAAK,CACnC,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,mCAAoC,EACtD,QACQ,CAEJ,SAAS,aAAa,CAAC,WAAW,KAAK,CAAC,OAAO,CAAG,MACtD,CACJ,GA2CA,SAAS,cAAc,CAAC,sBAAsB,gBAAgB,CAAC,QAAS,SAAS,CAAK,EAE9E,EAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,SActC,EAAW,GAbM,IAIX,EAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,SAStC,EAAW,GARM,EAEnB,GAEA,IAAI,EAAa,EAOjB,SAAS,EAAW,CAAC,EACjB,IAAI,EAAS,SAAS,sBAAsB,CAAC,YAC7C,GAAI,AAAkB,IAAlB,EAAO,MAAM,EAIjB,IAAK,IAAI,KAFT,EAAa,EAAI,EAAO,MAAM,CAAG,EAAI,EAAI,EAAI,EAAO,MAAM,CAAG,EAE3C,GACd,EAAM,KAAK,CAAC,OAAO,CAAG,MAG1B,CAAA,CAAM,CAAC,EAAa,EAAE,CAAC,KAAK,CAAC,OAAO,CAAG,QAC3C,CAjBA,EADiB","sources":["<anon>","src/js/main.js"],"sourcesContent":["var $d706c914d748cb55$exports = {};\n\"use strict\";\ndocument.getElementById(\"fetch-books\").addEventListener(\"click\", async ()=>{\n    document.querySelector(\".loader\").style.display = \"flex\";\n    document.getElementById(\"text\").style.display = \"none\";\n    document.getElementById(\"slideshowcontainer\").innerHTML = \"\";\n    $d706c914d748cb55$var$slideIndex = 1;\n    const selectedDate = document.getElementById(\"date-picker\").value;\n    const selectedGenre = document.getElementById(\"genre-picker\").value;\n    const url = `https://api.nytimes.com/svc/books/v3/lists/${selectedDate}/${selectedGenre}.json?api-key=3gySNnE3Ly9D2zD3DEC9GroOYifGli9A`;\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        $d706c914d748cb55$var$displayBooks(data.results.books);\n    } catch (error) {\n        console.error(\"Det gick inte att h\\xe4mta b\\xf6ckerna\", error);\n    } finally{\n        // Dölj laddningsanimationen när processen är klar\n        document.querySelector(\".loader\").style.display = \"none\";\n    }\n});\nasync function $d706c914d748cb55$var$displayBooks(books) {\n    const bookList = document.getElementById(\"slideshowcontainer\");\n    bookList.innerHTML = \"\"; // Rensa tidigare innehåll\n    // Sortera böckerna efter deras rank i stigande ordning\n    const sortedBooks = books.sort((a, b)=>a.rank - b.rank);\n    // Skapa en array av promises för att hämta ytterligare information om varje bok\n    const promises = sortedBooks.map((book)=>fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${book.primary_isbn13}&key=AIzaSyCPduk_iSsjI6LaBiyVg0x6PDzT0Fa2uDo`).then((response)=>response.json()));\n    // Vänta på att alla promises ska lösas\n    const results = await Promise.all(promises);\n    console.log(results);\n    // Processa varje resultat och skapa en slide för varje bok\n    results.forEach((googleBooksData, index)=>{\n        const book = sortedBooks[index];\n        const bookInfo = googleBooksData.items ? googleBooksData.items[0].volumeInfo : {};\n        const bookItem = document.createElement(\"article\");\n        bookItem.innerHTML = `\r\n        <div class=\"mySlides fade\">\r\n        <picture class=\"bookimg\">\r\n            <img src=\"${book.book_image}\" alt=\"${book.title}\" class=\"book-image\">\r\n          </picture>\r\n            <h2>${book.rank}. ${book.title}</h2>\r\n            <ul class=\"dotlist\">\r\n                <li><strong>Author:</strong> ${book.author}</li>\r\n                <li><strong>ISBN:</strong> ${book.primary_isbn13}</li>\r\n            </ul>\r\n            <p>${book.description}</p>\r\n            <a href=\"${bookInfo.previewLink || \"#\"}\" target=\"_blank\" class=\"preview-link\">More about: ${book.title}</a>\r\n            <a class=\"prev\">&#10094;</a>\r\n            <a class=\"next\">&#10095;</a>\r\n        </div>\r\n        `;\n        bookList.appendChild(bookItem);\n    });\n    $d706c914d748cb55$var$showSlides(1);\n}\ndocument.getElementById(\"slideshowcontainer\").addEventListener(\"click\", function(event) {\n    // Kontrollera om det bakåt-pilen har klassen 'prev'\n    if (event.target.classList.contains(\"prev\")) $d706c914d748cb55$var$plusSlides(-1); // Gå ett steg bakåt\n    // Kontrollera om det klickade elementet har klassen 'next'\n    if (event.target.classList.contains(\"next\")) $d706c914d748cb55$var$plusSlides(1); // Gå ett steg framåt\n});\nlet $d706c914d748cb55$var$slideIndex = 1;\n$d706c914d748cb55$var$showSlides($d706c914d748cb55$var$slideIndex);\nfunction $d706c914d748cb55$var$plusSlides(n) {\n    $d706c914d748cb55$var$showSlides($d706c914d748cb55$var$slideIndex += n);\n}\nfunction $d706c914d748cb55$var$showSlides(n) {\n    let slides = document.getElementsByClassName(\"mySlides\");\n    if (slides.length === 0) return; // Avsluta om det inte finns några slides\n    $d706c914d748cb55$var$slideIndex = n > slides.length ? 1 : n < 1 ? slides.length : n; // Cirkulär navigering\n    for (let slide of slides)slide.style.display = \"none\"; // Dölj alla slides\n    slides[$d706c914d748cb55$var$slideIndex - 1].style.display = \"block\"; // Visa den aktuella sliden\n}\n\n\n//# sourceMappingURL=index.7567e23c.js.map\n","\"use strict\";\r\n\r\ndocument.getElementById('fetch-books').addEventListener('click', async () => {\r\n    document.querySelector('.loader').style.display = 'flex';\r\n    document.getElementById('text').style.display = 'none';\r\n    document.getElementById('slideshowcontainer').innerHTML = '';\r\n    slideIndex = 1;\r\n    const selectedDate = document.getElementById('date-picker').value;\r\n    const selectedGenre = document.getElementById('genre-picker').value;\r\n    const url = `https://api.nytimes.com/svc/books/v3/lists/${selectedDate}/${selectedGenre}.json?api-key=3gySNnE3Ly9D2zD3DEC9GroOYifGli9A`;\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        displayBooks(data.results.books);\r\n    } catch (error) {\r\n        console.error('Det gick inte att hämta böckerna', error);\r\n    }\r\n    finally {\r\n        // Dölj laddningsanimationen när processen är klar\r\n        document.querySelector('.loader').style.display = 'none';\r\n    }\r\n});\r\n\r\nasync function displayBooks(books) {\r\n    const bookList = document.getElementById('slideshowcontainer');\r\n    bookList.innerHTML = ''; // Rensa tidigare innehåll\r\n    // Sortera böckerna efter deras rank i stigande ordning\r\n    const sortedBooks = books.sort((a, b) => a.rank - b.rank);\r\n    // Skapa en array av promises för att hämta ytterligare information om varje bok\r\n    const promises = sortedBooks.map(book =>\r\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${book.primary_isbn13}&key=AIzaSyCPduk_iSsjI6LaBiyVg0x6PDzT0Fa2uDo`)\r\n        .then(response => response.json())\r\n    );\r\n\r\n    // Vänta på att alla promises ska lösas\r\n    const results = await Promise.all(promises);\r\n    console.log(results);\r\n\r\n    // Processa varje resultat och skapa en slide för varje bok\r\n    results.forEach((googleBooksData, index) => {\r\n        const book = sortedBooks[index];\r\n        const bookInfo = googleBooksData.items ? googleBooksData.items[0].volumeInfo : {};\r\n        const bookItem = document.createElement('article');\r\n        bookItem.innerHTML = `\r\n        <div class=\"mySlides fade\">\r\n        <picture class=\"bookimg\">\r\n            <img src=\"${book.book_image}\" alt=\"${book.title}\" class=\"book-image\">\r\n          </picture>\r\n            <h2>${book.rank}. ${book.title}</h2>\r\n            <ul class=\"dotlist\">\r\n                <li><strong>Author:</strong> ${book.author}</li>\r\n                <li><strong>ISBN:</strong> ${book.primary_isbn13}</li>\r\n            </ul>\r\n            <p>${book.description}</p>\r\n            <a href=\"${bookInfo.previewLink || '#'}\" target=\"_blank\" class=\"preview-link\">More about: ${book.title}</a>\r\n            <a class=\"prev\">&#10094;</a>\r\n            <a class=\"next\">&#10095;</a>\r\n        </div>\r\n        `;\r\n        bookList.appendChild(bookItem);\r\n    });\r\n    showSlides(1);\r\n}\r\n\r\ndocument.getElementById('slideshowcontainer').addEventListener('click', function(event) {\r\n    // Kontrollera om det bakåt-pilen har klassen 'prev'\r\n    if (event.target.classList.contains('prev')) {\r\n        plusSlides(-1); // Gå ett steg bakåt\r\n    }\r\n\r\n    // Kontrollera om det klickade elementet har klassen 'next'\r\n    if (event.target.classList.contains('next')) {\r\n        plusSlides(1); // Gå ett steg framåt\r\n    }\r\n});\r\n\r\nlet slideIndex = 1;\r\nshowSlides(slideIndex);\r\n\r\nfunction plusSlides(n) {\r\n  showSlides(slideIndex += n);\r\n}\r\n\r\nfunction showSlides(n) {\r\n    let slides = document.getElementsByClassName(\"mySlides\");\r\n    if (slides.length === 0) return; // Avsluta om det inte finns några slides\r\n\r\n    slideIndex = n > slides.length ? 1 : n < 1 ? slides.length : n; // Cirkulär navigering\r\n\r\n    for (let slide of slides) {\r\n        slide.style.display = \"none\"; // Dölj alla slides\r\n    }\r\n\r\n    slides[slideIndex - 1].style.display = \"block\"; // Visa den aktuella sliden\r\n}\r\n"],"names":["$d706c914d748cb55$var$displayBooks","books","bookList","document","getElementById","innerHTML","sortedBooks","sort","a","b","rank","promises","map","book","fetch","primary_isbn13","then","response","json","results","Promise","all","console","log","forEach","googleBooksData","index","bookInfo","items","volumeInfo","bookItem","createElement","book_image","title","author","description","previewLink","appendChild","$d706c914d748cb55$var$showSlides","addEventListener","querySelector","style","display","$d706c914d748cb55$var$slideIndex","selectedDate","value","selectedGenre","url","data","error","event","target","classList","contains","n","slides","getElementsByClassName","length","slide"],"version":3,"file":"index.7567e23c.js.map"}